{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,KAE5C,IAAM,EAAgB,aAAa,OAAO,CAAC,iBACvC,IACF,MAAM,GACN,aAAa,UAAU,CAAC,kBAI1B,IAAM,EAAW,SAAS,cAAc,CAAC,iBACnC,EAAQ,SAAS,cAAc,CAAC,iBAEtC,SAAS,IACP,EAAM,WAAW,CAAG,EAAS,OAAO,CAAG,SAAW,QACpD,CAGA,EAAS,gBAAgB,CAAC,SAAU,GAGpC,GACF","sources":["<anon>","js/auth.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', ()=>{\n    // Hiển thị thông báo nếu có trong localStorage\n    const logoutMessage = localStorage.getItem('logoutMessage');\n    if (logoutMessage) {\n        alert(logoutMessage);\n        localStorage.removeItem('logoutMessage');\n    }\n    // Cập nhật nhãn checkbox dựa trên trạng thái\n    const checkbox = document.getElementById('CheckboxLarge');\n    const label = document.getElementById('checkboxLabel');\n    function updateLabel() {\n        label.textContent = checkbox.checked ? 'Writer' : 'Reader';\n    }\n    // Lắng nghe sự kiện thay đổi của checkbox\n    checkbox.addEventListener('change', updateLabel);\n    // Thiết lập nhãn ban đầu khi trang tải\n    updateLabel();\n});\nfunction callLogin() {\n    const username = document.getElementById('username').value;\n    const password = document.getElementById('password').value;\n    const user = {\n        username: username,\n        password: password\n    };\n    console.log(window.config.apiBaseUrl);\n    login(user);\n}\nasync function login(user) {\n    try {\n        const response = await fetch(`https://${window.config.apiBaseUrl}/api/Auth/Login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(user)\n        });\n        const data = await response.json();\n        if (data.userName) localStorage.setItem('loginName', data.userName);\n        if (data.jwtToken) {\n            localStorage.setItem('jwtToken', data.jwtToken);\n            window.location.href = '/html/index.html';\n        } else {\n            console.log('No Token! Please check.');\n            document.getElementById('errorMessage').textContent = 'Token Failed';\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        document.getElementById('errorMessage').textContent = 'Login failed!';\n    }\n}\nfunction logout() {\n    // Xóa JWT khỏi localStorage và chuyển hướng\n    localStorage.removeItem('jwtToken');\n    window.location.href = '/html/login.html';\n    localStorage.setItem('logoutMessage', 'Logout succeeded!');\n}\nfunction callRegister() {\n    const username = document.getElementById('username').value;\n    const password = document.getElementById('password').value;\n    const checkbox = document.getElementById('CheckboxLarge');\n    const roles = checkbox.checked ? [\n        'writer'\n    ] : [\n        'reader'\n    ];\n    console.log('Username:', username);\n    console.log('Password:', password);\n    console.log('Roles:', roles);\n    var account = {\n        userName: username,\n        password: password,\n        roles: roles\n    };\n    Register(account);\n}\nasync function Register(account) {\n    try {\n        const response = await fetch(`https://${window.config.apiBaseUrl}/api/Auth/Register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(account)\n        });\n        if (response.ok) {\n            const message = await response.text();\n            console.log('Registration Successful:', message);\n            alert(message);\n            window.location.href = '/login';\n        } else {\n            const errorMessage = await response.text();\n            alert('Registration failed. Please check your permissions.');\n            console.error('Failed to register:', response.status, errorMessage);\n        }\n    } catch (error) {\n        alert('Load data failed, please check your connection to the backend.');\n        console.error('Error:', error);\n    }\n}\n\n//# sourceMappingURL=index.221b8ae7.js.map\n","document.addEventListener('DOMContentLoaded', () => {\r\n  // Hiển thị thông báo nếu có trong localStorage\r\n  const logoutMessage = localStorage.getItem('logoutMessage')\r\n  if (logoutMessage) {\r\n    alert(logoutMessage)\r\n    localStorage.removeItem('logoutMessage')\r\n  }\r\n\r\n  // Cập nhật nhãn checkbox dựa trên trạng thái\r\n  const checkbox = document.getElementById('CheckboxLarge')\r\n  const label = document.getElementById('checkboxLabel')\r\n\r\n  function updateLabel() {\r\n    label.textContent = checkbox.checked ? 'Writer' : 'Reader'\r\n  }\r\n\r\n  // Lắng nghe sự kiện thay đổi của checkbox\r\n  checkbox.addEventListener('change', updateLabel)\r\n\r\n  // Thiết lập nhãn ban đầu khi trang tải\r\n  updateLabel()\r\n})\r\n\r\nfunction callLogin() {\r\n  const username = document.getElementById('username').value\r\n  const password = document.getElementById('password').value\r\n\r\n  const user = {\r\n    username: username,\r\n    password: password,\r\n  }\r\n  console.log(window.config.apiBaseUrl)\r\n\r\n  login(user)\r\n}\r\n\r\nasync function login(user) {\r\n  try {\r\n    const response = await fetch(`https://${window.config.apiBaseUrl}/api/Auth/Login`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(user),\r\n    })\r\n\r\n    const data = await response.json()\r\n    if (data.userName) {\r\n      localStorage.setItem('loginName', data.userName)\r\n    }\r\n    if (data.jwtToken) {\r\n      localStorage.setItem('jwtToken', data.jwtToken)\r\n      window.location.href = '/html/index.html'\r\n    } else {\r\n      console.log('No Token! Please check.')\r\n      document.getElementById('errorMessage').textContent = 'Token Failed'\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error)\r\n    document.getElementById('errorMessage').textContent = 'Login failed!'\r\n  }\r\n}\r\n\r\nfunction logout() {\r\n  // Xóa JWT khỏi localStorage và chuyển hướng\r\n  localStorage.removeItem('jwtToken')\r\n  window.location.href = '/html/login.html'\r\n  localStorage.setItem('logoutMessage', 'Logout succeeded!')\r\n}\r\n\r\nfunction callRegister() {\r\n  const username = document.getElementById('username').value\r\n  const password = document.getElementById('password').value\r\n  const checkbox = document.getElementById('CheckboxLarge')\r\n  const roles = checkbox.checked ? ['writer'] : ['reader']\r\n\r\n  console.log('Username:', username)\r\n  console.log('Password:', password)\r\n  console.log('Roles:', roles)\r\n\r\n  var account = {\r\n    userName: username,\r\n    password: password,\r\n    roles: roles,\r\n  }\r\n  Register(account)\r\n}\r\n\r\nasync function Register(account) {\r\n  try {\r\n    const response = await fetch(`https://${window.config.apiBaseUrl}/api/Auth/Register`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(account),\r\n    })\r\n\r\n    if (response.ok) {\r\n      const message = await response.text()\r\n      console.log('Registration Successful:', message)\r\n      alert(message)\r\n      window.location.href = '/login'\r\n    } else {\r\n      const errorMessage = await response.text()\r\n      alert('Registration failed. Please check your permissions.')\r\n      console.error('Failed to register:', response.status, errorMessage)\r\n    }\r\n  } catch (error) {\r\n    alert('Load data failed, please check your connection to the backend.')\r\n    console.error('Error:', error)\r\n  }\r\n}\r\n"],"names":["document","addEventListener","logoutMessage","localStorage","getItem","alert","removeItem","checkbox","getElementById","label","updateLabel","textContent","checked"],"version":3,"file":"index.221b8ae7.js.map"}