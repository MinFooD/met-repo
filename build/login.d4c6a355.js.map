{"mappings":"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","sources":["<anon>","js/auth.js","js/utils.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"kxgSl\", function(module, exports) {\n\n$parcel$export(module.exports, \"logout\", () => $ef33fadb70b8678b$export$a0973bcfe11b05c9);\n\nvar $LMLC2 = parcelRequire(\"LMLC2\");\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    // Hiển thị thông báo nếu có trong localStorage\n    const logoutMessage = localStorage.getItem('logoutMessage');\n    if (logoutMessage) {\n        alert(logoutMessage);\n        localStorage.removeItem('logoutMessage');\n    }\n    // Cập nhật nhãn checkbox dựa trên trạng thái\n    const checkbox = document.getElementById('CheckboxLarge');\n    const label = document.getElementById('checkboxLabel');\n    function updateLabel() {\n        const currentLabel = checkbox.checked ? 'Writer' : 'Reader';\n        if (label.textContent !== currentLabel) label.textContent = currentLabel;\n    }\n    if (checkbox != null) {\n        // Lắng nghe sự kiện thay đổi của checkbox\n        checkbox.addEventListener('change', updateLabel);\n        // Thiết lập nhãn ban đầu khi trang tải\n        updateLabel();\n    }\n    if (!window.OneSignal) console.error(\"OneSignal ch\\u01B0a \\u0111\\u01B0\\u1EE3c t\\u1EA3i. Vui l\\xf2ng ki\\u1EC3m tra.\");\n});\nasync function $ef33fadb70b8678b$var$callLogin() {\n    const username = document.getElementById('username').value;\n    const password = document.getElementById('password').value;\n    const user = {\n        username: username,\n        password: password\n    };\n    console.log(window.config.apiBaseUrl);\n    await $ef33fadb70b8678b$var$login(user);\n}\nasync function $ef33fadb70b8678b$var$login(user) {\n    try {\n        const response = await fetch(`https://${window.config.apiBaseUrl}/api/Auth/Login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(user)\n        });\n        const data = await response.json();\n        if (data.userName) localStorage.setItem('loginName', data.userName);\n        if (data.jwtToken) {\n            localStorage.setItem('jwtToken', data.jwtToken);\n            window.location.href = '/';\n        } else {\n            console.log('No Token! Please check.');\n            document.getElementById('errorMessage').textContent = 'Token Failed';\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        document.getElementById('errorMessage').textContent = 'Login failed!';\n    }\n}\nasync function $ef33fadb70b8678b$var$callRegister() {\n    const username = document.getElementById('username').value;\n    const password = document.getElementById('password').value;\n    const checkbox = document.getElementById('CheckboxLarge');\n    const roles = checkbox.checked ? [\n        'writer'\n    ] : [\n        'reader'\n    ];\n    if (!username || !password) {\n        alert('Username and password cannot be empty.');\n        return;\n    }\n    var account = {\n        userName: username,\n        password: password,\n        roles: roles\n    };\n    try {\n        // Lấy playerId từ OneSignal\n        const playerId = await $ef33fadb70b8678b$var$getOneSignalPlayerId();\n        if (playerId) account.playerId = playerId // Thêm Player ID vào thông tin đăng ký\n        ;\n        // Gọi Register để gửi thông tin người dùng lên backend\n        await $ef33fadb70b8678b$var$Register(account);\n    } catch (error) {\n        console.error('Error getting playerId from OneSignal:', error);\n    // Bạn có thể thông báo lỗi nếu không lấy được playerId\n    }\n}\nasync function $ef33fadb70b8678b$var$Register(account) {\n    try {\n        const response = await fetch(`https://${window.config.apiBaseUrl}/api/Auth/Register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(account)\n        });\n        if (response.ok) {\n            const message = await response.text();\n            console.log('Registration Successful:', message);\n            alert(message);\n            // Sau khi đăng ký thành công, thực hiện khởi tạo OneSignal\n            await (0, $LMLC2.initializeOneSignal)(account.userName) // Gửi username làm externalId cho OneSignal\n            ;\n            window.location.href = '/login';\n        } else {\n            const errorMessage = await response.text();\n            alert('Registration failed. Please check your permissions.');\n            console.error('Failed to register:', errorMessage);\n        }\n    } catch (error) {\n        alert('Load data failed, please check your connection to the backend.');\n        console.error('Error:', error);\n    }\n}\nasync function $ef33fadb70b8678b$var$getOneSignalPlayerId() {\n    try {\n        const playerId = await OneSignal.getUserId();\n        console.log('Player ID from OneSignal:', playerId);\n        return playerId;\n    } catch (error) {\n        console.error('Error getting playerId from OneSignal:', error);\n        return null;\n    }\n}\nasync function $ef33fadb70b8678b$export$a0973bcfe11b05c9() {\n    // Xóa JWT khỏi localStorage và chuyển hướng\n    localStorage.removeItem('jwtToken');\n    window.location.href = '/login';\n    localStorage.setItem('logoutMessage', 'Logout succeeded!');\n}\nconst $ef33fadb70b8678b$var$globalFunctions = {\n    Register: $ef33fadb70b8678b$var$Register,\n    login: $ef33fadb70b8678b$var$login,\n    callLogin: $ef33fadb70b8678b$var$callLogin,\n    callRegister: $ef33fadb70b8678b$var$callRegister,\n    initializeOneSignal: $LMLC2.initializeOneSignal,\n    getOneSignalPlayerId: $ef33fadb70b8678b$var$getOneSignalPlayerId\n};\nObject.keys($ef33fadb70b8678b$var$globalFunctions).forEach((key)=>{\n    window[key] = $ef33fadb70b8678b$var$globalFunctions[key];\n});\n\n});\nparcelRegister(\"LMLC2\", function(module, exports) {\n\n$parcel$export(module.exports, \"initializeOneSignal\", () => $08fa37fff71de28c$export$701e789bb0ae35cc);\nasync function $08fa37fff71de28c$export$701e789bb0ae35cc(externalId) {\n    if (window.OneSignal) try {\n        await OneSignal.init({\n            appId: '523487ee-5286-415a-8973-77cbd85d83bb',\n            serviceWorkerPath: '/OneSignalSDKWorker.js',\n            promptOptions: {\n                slidedown: {\n                    enabled: true\n                }\n            }\n        });\n        console.log('OneSignal initialized successfully.');\n        await OneSignal.setExternalUserId(externalId) // Gán External ID cho người dùng mới\n        ;\n        console.log('Assigned external user ID:', externalId);\n        // Hiển thị prompt yêu cầu người dùng đăng ký nhận thông báo\n        await OneSignal.showSlidedownPrompt();\n        console.log('Displayed subscription prompt.');\n        // Lắng nghe thay đổi trạng thái đăng ký nhận thông báo\n        OneSignal.on('subscriptionChange', function(isSubscribed) {\n            if (isSubscribed) // Lấy Player ID khi người dùng đồng ý nhận thông báo\n            OneSignal.getUserId().then(function(playerId) {\n                console.log('Player ID:', playerId);\n            });\n        });\n    } catch (error) {\n        console.error('Failed to initialize OneSignal:', error);\n    }\n    else console.error(\"OneSignal SDK ch\\u01B0a \\u0111\\u01B0\\u1EE3c t\\u1EA3i.\");\n}\n\n});\n\n\n\nparcelRequire(\"kxgSl\");\n\n//# sourceMappingURL=login.d4c6a355.js.map\n","document.addEventListener('DOMContentLoaded', () => {\r\n  // Hiển thị thông báo nếu có trong localStorage\r\n  const logoutMessage = localStorage.getItem('logoutMessage')\r\n  if (logoutMessage) {\r\n    alert(logoutMessage)\r\n    localStorage.removeItem('logoutMessage')\r\n  }\r\n\r\n  // Cập nhật nhãn checkbox dựa trên trạng thái\r\n  const checkbox = document.getElementById('CheckboxLarge')\r\n  const label = document.getElementById('checkboxLabel')\r\n\r\n  function updateLabel() {\r\n    const currentLabel = checkbox.checked ? 'Writer' : 'Reader'\r\n    if (label.textContent !== currentLabel) {\r\n      label.textContent = currentLabel\r\n    }\r\n  }\r\n  if (checkbox != null) {\r\n    // Lắng nghe sự kiện thay đổi của checkbox\r\n    checkbox.addEventListener('change', updateLabel)\r\n\r\n    // Thiết lập nhãn ban đầu khi trang tải\r\n    updateLabel()\r\n  }\r\n  if (!window.OneSignal) {\r\n    console.error('OneSignal chưa được tải. Vui lòng kiểm tra.')\r\n  }\r\n})\r\n\r\nimport { initializeOneSignal } from '/js/utils.js'\r\n\r\nasync function callLogin() {\r\n  const username = document.getElementById('username').value\r\n  const password = document.getElementById('password').value\r\n\r\n  const user = {\r\n    username: username,\r\n    password: password,\r\n  }\r\n  console.log(window.config.apiBaseUrl)\r\n\r\n  await login(user)\r\n}\r\n\r\nasync function login(user) {\r\n  try {\r\n    const response = await fetch(`https://${window.config.apiBaseUrl}/api/Auth/Login`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(user),\r\n    })\r\n\r\n    const data = await response.json()\r\n    if (data.userName) {\r\n      localStorage.setItem('loginName', data.userName)\r\n    }\r\n    if (data.jwtToken) {\r\n      localStorage.setItem('jwtToken', data.jwtToken)\r\n      window.location.href = '/'\r\n    } else {\r\n      console.log('No Token! Please check.')\r\n      document.getElementById('errorMessage').textContent = 'Token Failed'\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error)\r\n    document.getElementById('errorMessage').textContent = 'Login failed!'\r\n  }\r\n}\r\n\r\nasync function callRegister() {\r\n  const username = document.getElementById('username').value\r\n  const password = document.getElementById('password').value\r\n  const checkbox = document.getElementById('CheckboxLarge')\r\n  const roles = checkbox.checked ? ['writer'] : ['reader']\r\n  if (!username || !password) {\r\n    alert('Username and password cannot be empty.')\r\n    return\r\n  }\r\n  var account = {\r\n    userName: username,\r\n    password: password,\r\n    roles: roles,\r\n  }\r\n  try {\r\n    // Lấy playerId từ OneSignal\r\n    const playerId = await getOneSignalPlayerId()\r\n    if (playerId) {\r\n      account.playerId = playerId // Thêm Player ID vào thông tin đăng ký\r\n    }\r\n    // Gọi Register để gửi thông tin người dùng lên backend\r\n    await Register(account)\r\n  } catch (error) {\r\n    console.error('Error getting playerId from OneSignal:', error)\r\n    // Bạn có thể thông báo lỗi nếu không lấy được playerId\r\n  }\r\n}\r\n\r\nasync function Register(account) {\r\n  try {\r\n    const response = await fetch(`https://${window.config.apiBaseUrl}/api/Auth/Register`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(account),\r\n    })\r\n    if (response.ok) {\r\n      const message = await response.text()\r\n      console.log('Registration Successful:', message)\r\n      alert(message)\r\n      // Sau khi đăng ký thành công, thực hiện khởi tạo OneSignal\r\n      await initializeOneSignal(account.userName) // Gửi username làm externalId cho OneSignal\r\n\r\n      window.location.href = '/login'\r\n    } else {\r\n      const errorMessage = await response.text()\r\n      alert('Registration failed. Please check your permissions.')\r\n      console.error('Failed to register:', errorMessage)\r\n    }\r\n  } catch (error) {\r\n    alert('Load data failed, please check your connection to the backend.')\r\n    console.error('Error:', error)\r\n  }\r\n}\r\nasync function getOneSignalPlayerId() {\r\n  try {\r\n    const playerId = await OneSignal.getUserId()\r\n    console.log('Player ID from OneSignal:', playerId)\r\n    return playerId\r\n  } catch (error) {\r\n    console.error('Error getting playerId from OneSignal:', error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport async function logout() {\r\n  // Xóa JWT khỏi localStorage và chuyển hướng\r\n  localStorage.removeItem('jwtToken')\r\n  window.location.href = '/login'\r\n  localStorage.setItem('logoutMessage', 'Logout succeeded!')\r\n}\r\n\r\nconst globalFunctions = {\r\n  Register,\r\n  login,\r\n  callLogin,\r\n  callRegister,\r\n  initializeOneSignal,\r\n  getOneSignalPlayerId,\r\n}\r\n\r\nObject.keys(globalFunctions).forEach((key) => {\r\n  window[key] = globalFunctions[key]\r\n})\r\n","export async function initializeOneSignal(externalId) {\r\n  if (window.OneSignal) {\r\n    try {\r\n      await OneSignal.init({\r\n        appId: '523487ee-5286-415a-8973-77cbd85d83bb', // App ID của OneSignal\r\n        serviceWorkerPath: '/OneSignalSDKWorker.js', // Đảm bảo bạn đã có file này\r\n        promptOptions: {\r\n          slidedown: {\r\n            enabled: true, // Hiển thị thông báo yêu cầu nhận thông báo\r\n          },\r\n        },\r\n      })\r\n      console.log('OneSignal initialized successfully.')\r\n      await OneSignal.setExternalUserId(externalId) // Gán External ID cho người dùng mới\r\n      console.log('Assigned external user ID:', externalId)\r\n      // Hiển thị prompt yêu cầu người dùng đăng ký nhận thông báo\r\n      await OneSignal.showSlidedownPrompt()\r\n      console.log('Displayed subscription prompt.')\r\n      // Lắng nghe thay đổi trạng thái đăng ký nhận thông báo\r\n      OneSignal.on('subscriptionChange', function (isSubscribed) {\r\n        if (isSubscribed) {\r\n          // Lấy Player ID khi người dùng đồng ý nhận thông báo\r\n          OneSignal.getUserId().then(function (playerId) {\r\n            console.log('Player ID:', playerId)\r\n          })\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error('Failed to initialize OneSignal:', error)\r\n    }\r\n  } else {\r\n    console.error('OneSignal SDK chưa được tải.')\r\n  }\r\n}\r\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$ef33fadb70b8678b$export$a0973bcfe11b05c9","$LMLC2","$ef33fadb70b8678b$var$callLogin","username","document","getElementById","value","password","console","log","window","config","apiBaseUrl","$ef33fadb70b8678b$var$login","user","response","fetch","method","headers","body","JSON","stringify","data","json","userName","localStorage","setItem","jwtToken","location","href","textContent","error","$ef33fadb70b8678b$var$callRegister","roles","checkbox","checked","alert","account","playerId","$ef33fadb70b8678b$var$getOneSignalPlayerId","$ef33fadb70b8678b$var$Register","ok","message","text","initializeOneSignal","errorMessage","OneSignal","getUserId","removeItem","addEventListener","logoutMessage","getItem","label","updateLabel","currentLabel","$ef33fadb70b8678b$var$globalFunctions","Register","login","callLogin","callRegister","getOneSignalPlayerId","keys","forEach","key","$08fa37fff71de28c$export$701e789bb0ae35cc","externalId","appId","serviceWorkerPath","promptOptions","slidedown","enabled","setExternalUserId","showSlidedownPrompt","on","isSubscribed","then"],"version":3,"file":"login.d4c6a355.js.map"}